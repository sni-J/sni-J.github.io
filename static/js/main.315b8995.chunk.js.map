{"version":3,"sources":["static/logo/sniperJ.svg","App.styled.js","components/molecules/Scrollable/Scrollable.styled.js","components/molecules/Scrollable/Scrollable.js","components/organisms/Header/Header.styled.js","components/atoms/MenuItem/MenuItem.styled.js","components/atoms/MenuItem/MenuItem.js","components/atoms/MenuBtn/MenuBtn.styled.js","components/atoms/MenuBtn/MenuBtn.js","components/organisms/Header/Header.js","components/organisms/HomeContent/HomeContent.styled.js","components/organisms/HomeContent/HomeContent.js","components/organisms/DevContent/DevContent.styled.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppWrapper","styled","div","ScrollableWrapper","open","Scrollable","forwardRef","ref","mobile","children","HeaderWrapper","MenuItemWrapper","button","active","MenuItem","scrollTo","content","idx","setOpen","onClick","MenuBtnWrapper","menu_btn","Header","activeItem","menuItems","map","key","MenuBtn","HomeContentWrapper","HomeContent","src","logo","alt","href","App","useState","setMobile","setActiveItem","appRef","createRef","resize","window","innerWidth","innerHeight","useEffect","addEventListener","onScroll","parseInt","current","scrollTop","clientHeight","top","behavior","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.315b8995.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sniperJ.b8d56a95.svg\";","import styled from 'styled-components'\r\n\r\nconst AppWrapper = styled.div`\r\n  background-color: #222;\r\n`\r\n\r\nexport default AppWrapper\r\n","import styled from 'styled-components'\r\n\r\nconst ScrollableWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  height: 100vh;\r\n  overflow-y: scroll;\r\n  scroll-snap-type: mandatory;\r\n  scroll-snap-points-y: repeat(100vh);\r\n  scroll-snap-type: y mandatory;\r\n\r\n  -ms-overflow-style: none;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  filter: ${({ open }) => (open ? 'blur(.5rem)' : '')};\r\n  transition: all 0.3s linear;\r\n`\r\n\r\nexport default ScrollableWrapper\r\n","import React, { forwardRef } from 'react'\r\n\r\nimport ScrollableWrapper from './Scrollable.styled'\r\n\r\nconst Scrollable = forwardRef(({ mobile, open, children }, ref) => {\r\n  return (\r\n    <ScrollableWrapper open={open} ref={ref}>\r\n      {children}\r\n    </ScrollableWrapper>\r\n  )\r\n})\r\n\r\nexport default Scrollable\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  position: fixed;\r\n  background-color: rgba(34, 34, 34, 0.8);\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: ${({ mobile, open }) =>\r\n    mobile ? (open ? '100vh' : '3.8rem') : '3.8rem'};\r\n  overflow: hidden;\r\n  transition: all 0.3s linear;\r\n  z-index: 10;\r\n\r\n  > div {\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: ${({ mobile }) => (mobile ? 'column' : 'row')};\r\n    justify-content: flex-end;\r\n    padding: 0 ${({ mobile }) => (mobile ? '1rem' : '3rem')};\r\n    margin-top: ${({ mobile }) => (mobile ? '3.8rem' : '0')};\r\n    width: 100%;\r\n  }\r\n\r\n  button {\r\n    margin: 1rem;\r\n  }\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import styled from 'styled-components'\r\n\r\nconst MenuItemWrapper = styled.button`\r\n  color: #fff;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  width: ${({ mobile }) => (mobile ? 'calc(100% - 2rem)' : 'auto')}\r\n  height: 1.8rem;\r\n  position: relative;\r\n  padding: 0 0.5rem;\r\n  text-align: left;\r\n\r\n  span{\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    \r\n    ::before {\r\n      content: '';\r\n      position: absolute;\r\n      background-color: #0ff;\r\n      transition: all 0.3s ease-in-out;\r\n\r\n      width: ${({ mobile, active }) =>\r\n        mobile ? '0.1rem' : active ? 'calc(100% + .4rem)' : '0%'};\r\n      height: ${({ mobile, active }) =>\r\n        mobile ? (active ? 'calc(100% + .8rem)' : '0%') : '0.1rem'};\r\n      left: ${({ mobile, active }) => (mobile ? '0' : active ? '-.2rem' : '')};\r\n      top: ${({ mobile, active }) => (mobile ? (active ? '-.4rem' : '') : '')};\r\n      right: ${({ mobile }) => (mobile ? '0' : '-.2rem')};\r\n      bottom: ${({ mobile }) => (mobile ? '-.4rem' : '0')};\r\n    }\r\n  }\r\n`\r\n\r\nexport default MenuItemWrapper\r\n","import React from 'react'\r\nimport MenuItemWrapper from './MenuItem.styled'\r\n\r\nconst MenuItem = ({ mobile, active, scrollTo, content, idx, setOpen }) => {\r\n  return (\r\n    <MenuItemWrapper\r\n      mobile={mobile}\r\n      active={active}\r\n      onClick={() => {\r\n        scrollTo(idx)\r\n        if (mobile) {\r\n          setOpen(false)\r\n        }\r\n      }}\r\n    >\r\n      <span>{content}</span>\r\n    </MenuItemWrapper>\r\n  )\r\n}\r\n\r\nexport default MenuItem\r\n","import styled from 'styled-components'\r\n\r\nconst MenuBtnWrapper = styled.button`\r\n  position: absolute;\r\n  border: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: transparent;\r\n  width: 1.8rem;\r\n  height: 1.8rem;\r\n  z-index: 10;\r\n  justify-content: space-around;\r\n  padding: 0;\r\n  right: 0;\r\n  outline: none;\r\n\r\n  div {\r\n    width: 1.8rem;\r\n    height: 0.3rem;\r\n    border-radius: 0.2rem;\r\n    background: #fff;\r\n    transition: all 0.3s linear;\r\n    transfrom-origin: 1rem;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) =>\r\n        open\r\n          ? 'translateY(0.6rem) rotate(-135deg)'\r\n          : 'translateY(0) rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      transform: ${({ open }) => (open ? 'rotate(-180deg)' : 'rotate(0)')};\r\n      opacity: ${({ open }) => (open ? 0 : 1)};\r\n    }\r\n\r\n    :last-child {\r\n      transform: ${({ open }) =>\r\n        open\r\n          ? 'translateY(-0.6rem) rotate(-225deg)'\r\n          : 'translateY(0) rotate(0)'};\r\n    }\r\n  }\r\n`\r\n\r\nexport default MenuBtnWrapper\r\n","import React from 'react'\r\nimport MenuBtnWrapper from './MenuBtn.styled'\r\n\r\nconst menu_btn = ({ open, setOpen }) => {\r\n  return (\r\n    <MenuBtnWrapper open={open} onClick={() => setOpen(!open)}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </MenuBtnWrapper>\r\n  )\r\n}\r\n\r\nexport default menu_btn\r\n","import React from 'react'\r\nimport HeaderWrapper from './Header.styled'\r\n\r\nimport MenuItem from '../../atoms/MenuItem'\r\nimport MenuBtn from '../../atoms/MenuBtn'\r\n\r\nconst Header = ({ activeItem, scrollTo, menuItems, mobile, open, setOpen }) => {\r\n  return (\r\n    <HeaderWrapper mobile={mobile} open={open}>\r\n      <div>\r\n        {menuItems.map((content, idx) => (\r\n          <MenuItem\r\n            active={menuItems[activeItem] === content}\r\n            {...{ scrollTo, idx, content, mobile, setOpen }}\r\n            key={idx}\r\n          />\r\n        ))}\r\n      </div>\r\n      {mobile ? <MenuBtn open={open} setOpen={setOpen} /> : null}\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nconst HomeContentWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  background-color: #222;\r\n  margin: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: ${({ mobile }) => (mobile ? 'column' : 'row')};\r\n  justify-content: center;\r\n  align-items: center;\r\n  scroll-snap-align: center;\r\n\r\n  img {\r\n    max-width: 50vw;\r\n    max-height: 10em;\r\n    padding: 1rem;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: ${({ mobile }) => (mobile ? 'center' : 'start')};\r\n    padding: 1rem;\r\n    border-left: ${({ mobile }) => (mobile ? '' : '1px solid #fff')};\r\n  }\r\n\r\n  span {\r\n    color: #fff;\r\n    font-weight: 800;\r\n    text-align: center;\r\n  }\r\n\r\n  a {\r\n    padding: 0.5rem;\r\n    font-weight: 400;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    white-space: nowrap;\r\n\r\n    :hover {\r\n      color: #0ff;\r\n    }\r\n  }\r\n`\r\n\r\nexport default HomeContentWrapper\r\n","import React from 'react'\r\n\r\nimport HomeContentWrapper from './HomeContent.styled'\r\n\r\nimport logo from '../../../static/logo/sniperJ.svg'\r\n\r\nconst HomeContent = ({ mobile }) => {\r\n  return (\r\n    <HomeContentWrapper mobile={mobile}>\r\n      <img src={logo} alt=\"sniperJ\" />\r\n      <div>\r\n        <span>Seoul, South Korea</span>\r\n        <span>\r\n          GitHub<a href=\"http://github.com/sni-J\">sni-J</a>\r\n        </span>\r\n        <span>\r\n          Instagram\r\n          <a href=\"http://instagram.com/sniperj_got_ya_back\">\r\n            sniperJ_got_ya_back\r\n          </a>\r\n        </span>\r\n        <span>\r\n          Email\r\n          <a href=\"mailto:wjl0316@kaist.ac.kr\">wjl0316@kaist.ac.kr</a>\r\n        </span>\r\n      </div>\r\n    </HomeContentWrapper>\r\n  )\r\n}\r\n\r\nexport default HomeContent\r\n","import styled from 'styled-components'\r\n\r\nconst DevContentWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  background-color: #555;\r\n  margin: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: ${({ mobile }) => (mobile ? 'column' : 'row')};\r\n  justify-content: center;\r\n  align-items: center;\r\n  scroll-snap-align: center;\r\n\r\n  img {\r\n    max-width: 60vw;\r\n    max-height: 10em;\r\n    padding: 2rem;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: ${({ mobile }) => (mobile ? 'center' : 'start')};\r\n    padding: 2rem;\r\n    border-left: ${({ mobile }) => (mobile ? '' : '1px solid #fff')};\r\n  }\r\n\r\n  span {\r\n    color: #fff;\r\n    font-weight: 800;\r\n    text-align: center;\r\n  }\r\n\r\n  a {\r\n    padding: 0.5rem;\r\n    font-weight: 400;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    white-space: nowrap;\r\n\r\n    :hover {\r\n      color: #0ff;\r\n    }\r\n  }\r\n`\r\n\r\nexport default DevContentWrapper\r\n","import React, { useState, useEffect, createRef } from 'react'\n\nimport AppWrapper from './App.styled'\n\nimport Scrollable from './components/molecules/Scrollable'\nimport Header from './components/organisms/Header'\nimport HomeContent from './components/organisms/HomeContent'\nimport DevContent from './components/organisms/DevContent'\n\nconst App = () => {\n  const [mobile, setMobile] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [activeItem, setActiveItem] = useState(0)\n\n  const appRef = createRef()\n\n  const menuItems = ['contact']\n\n  const resize = () => {\n    setMobile(window.innerWidth < 768 && window.innerHeight > window.innerWidth)\n  }\n  const scroll = () => {\n    setActiveItem(\n      parseInt(appRef.current.scrollTop / appRef.current.clientHeight + 0.5)\n    )\n  }\n\n  const scrollTo = idx => {\n    if (appRef) {\n      if (typeof appRef.current.scrollTo === 'function') {\n        appRef.current.scrollTo({\n          top: appRef.current.clientHeight * idx,\n          behavior: 'smooth',\n        })\n      } else {\n        appRef.current.scrollTop = appRef.current.clientHeight * idx\n      }\n    }\n  }\n\n  useEffect(() => {\n    resize()\n    window.addEventListener('resize', resize)\n  })\n\n  return (\n    <AppWrapper onScroll={scroll}>\n      <Header {...{ activeItem, scrollTo, menuItems, mobile, open, setOpen }} />\n      <Scrollable {...{ mobile, open }} ref={appRef}>\n        <HomeContent mobile={mobile} />\n      </Scrollable>\n    </AppWrapper>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}